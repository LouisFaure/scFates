name: Build and Test

on:
  push:
    paths:
      - 'scFates/**'

jobs:
  install_and_load:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install package
      run: |
        pip install .
    - name: Load package
      run: |
        python -c "import scFates"

  build_and_test:

    runs-on: ubuntu-latest
    needs: install_and_load

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get clean && sudo apt-get update
        sudo apt-get install -y r-base r-cran-mgcv
        pip install rpy2
        pip install wheel coverage cmake pytest mock git+https://github.com/j-bac/elpigraph-python.git
        pip install .
    - name: Test with pytest
      run: |
        coverage run -m pytest scFates/tests/test_w_plots.py
        coverage report -i -m
        coverage xml -i
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}


  pypi_upload:
    if: |
      contains(github.event.head_commit.message, 'pypi test') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
      - name: Build wheel
        run: |
          python setup.py bdist_wheel
          python setup.py sdist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
        if: contains(github.event.head_commit.message, 'pypi test')

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
        if: startsWith(github.ref, 'refs/tags/v')


  docker_upload:
    if: |
      contains(github.event.head_commit.message, 'docker test') ||
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: pypi_upload
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: louisfaure/scfates:${{ github.ref_name }},louisfaure/scfates:latest
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: louisfaure/scfates
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Build and push test
        id: docker_build_test
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: louisfaure/scfates:${{ github.ref_name }}
        if: contains(github.event.head_commit.message, 'docker test')
